[
["chap-tripgen.html", "Chapter 2 Trip Generation 2.1 Trip Production 2.2 Trip Attraction 2.3 Homework 2.4 Lab", " Chapter 2 Trip Generation The details of the Trip Generation models are given in section 4.4 of NCHRP 716 and in the course notes. In this unit we will use data from both the NHTS and from the Puget Sound Regional Council (PSRC). 2.1 Trip Production The trip production model is a cross-classification model. What this means is that we will classify households into different bins based on their household size, income, vehicle ownership, etc. We will then calculate the average number of trips made by households in each group. We will need to get the data for households and trips. Use the records for households in MSA size 02, that completed the survey on a weekday, and then filter the trips to include only those records. We can also select only the data columns that have the information we will use to classify the model. We might need to create some or modify variables that we need to use to cross-classify; for instance we should cap the household size category at 4 people and the vehicles at 3. library(tidyverse) library(nhts2017) hh &lt;- nhts_households %&gt;% # filter to MSA size 2, travel on weekday filter(msasize == &quot;02&quot;, !travday %in% c(&quot;01&quot;, &quot;07&quot;)) %&gt;% # select the columns we care about. select(houseid, wthhfin, hhsize, hhvehcnt, numadlt, hhfaminc, wrkcount) %&gt;% mutate( hhsize = ifelse(hhsize &gt; 4, 4, hhsize), hhvehcnt = ifelse(hhvehcnt &gt; 3, 3, hhvehcnt) ) hh ## # A tibble: 10,381 x 7 ## houseid wthhfin hhsize hhvehcnt numadlt hhfaminc wrkcount ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr+lbl&gt; &lt;dbl&gt; ## 1 30000019 279. 2 2 2 03 [$15,000 to $24,999] 0 ## 2 30000288 103. 1 2 1 05 [$35,000 to $49,999] 0 ## 3 30000289 244. 3 3 2 07 [$75,000 to $99,999] 1 ## 4 30000463 348. 2 2 2 06 [$50,000 to $74,999] 2 ## 5 30000465 133. 4 2 2 08 [$100,000 to $124,999] 2 ## 6 30000478 120. 2 0 2 03 [$15,000 to $24,999] 0 ## 7 30000545 35.7 2 3 2 06 [$50,000 to $74,999] 2 ## 8 30000770 130. 1 1 1 06 [$50,000 to $74,999] 1 ## 9 30000983 147. 4 3 4 09 [$125,000 to $149,999] 1 ## 10 30001177 304. 2 0 2 04 [$25,000 to $34,999] 2 ## # … with 10,371 more rows The next step is we need to calculate how many trips the members of each household in the data took. To do this, we can use summarise to count the number of trip rows for each household. Then, we can pivot_wider to spread the trips out by purpose. trips &lt;- nhts_trips %&gt;% # filter to households in the data filter(houseid %in% hh$houseid) %&gt;% group_by(houseid, trippurp) %&gt;% # count up how many trips each household took summarise(trips = n()) %&gt;% # &quot;spread&quot; the data, filling zero if no trips were taken pivot_wider(id_cols = houseid, names_from = trippurp, values_from = trips, values_fill = 0) ## `summarise()` regrouping output by &#39;houseid&#39; (override with `.groups` argument) trips ## Warning: `...` is not empty. ## ## We detected these problematic arguments: ## * `needs_dots` ## ## These dots only exist to allow future extensions and should be empty. ## Did you misspecify an argument? ## # A tibble: 9,518 x 7 ## # Groups: houseid [9,518] ## houseid HBO HBSHOP NHB HBSOCREC HBW `-9` ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; ## 1 30000019 4 0 0 0 0 0 ## 2 30000288 1 1 4 0 0 0 ## 3 30000289 2 4 3 1 1 0 ## 4 30000463 7 2 6 0 0 0 ## 5 30000465 8 2 9 0 1 0 ## 6 30000478 2 0 0 0 0 0 ## 7 30000545 0 2 2 4 2 0 ## 8 30000770 0 3 1 0 1 0 ## 9 30000983 4 0 2 1 2 0 ## 10 30001177 3 2 0 2 2 0 ## # … with 9,508 more rows Now, we will join the trips data frame to the households data frame so that everything is in one place. Note that when we do this, there will be some households that never made any trips; we need to change their trip counts from NA to 0. # function to change NA to 0 nato0 &lt;- function(x) {ifelse(is.na(x), 0, x)} tripprod &lt;- hh %&gt;% # join tables by id field left_join(trips, by = &quot;houseid&quot;) %&gt;% # change all NA values in columns from the trips data to 0.a mutate_at(vars(names(trips)), nato0) tripprod ## Warning: `...` is not empty. ## ## We detected these problematic arguments: ## * `needs_dots` ## ## These dots only exist to allow future extensions and should be empty. ## Did you misspecify an argument? ## # A tibble: 10,381 x 13 ## houseid wthhfin hhsize hhvehcnt numadlt hhfaminc wrkcount HBO HBSHOP NHB ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr+lb&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 300000… 279. 2 2 2 03 [$15… 0 4 0 0 ## 2 300002… 103. 1 2 1 05 [$35… 0 1 1 4 ## 3 300002… 244. 3 3 2 07 [$75… 1 2 4 3 ## 4 300004… 348. 2 2 2 06 [$50… 2 7 2 6 ## 5 300004… 133. 4 2 2 08 [$10… 2 8 2 9 ## 6 300004… 120. 2 0 2 03 [$15… 0 2 0 0 ## 7 300005… 35.7 2 3 2 06 [$50… 2 0 2 2 ## 8 300007… 130. 1 1 1 06 [$50… 1 0 3 1 ## 9 300009… 147. 4 3 4 09 [$12… 1 4 0 2 ## 10 300011… 304. 2 0 2 04 [$25… 2 3 2 0 ## # … with 10,371 more rows, and 3 more variables: HBSOCREC &lt;dbl&gt;, HBW &lt;dbl&gt;, ## # `-9` &lt;dbl&gt; Now we can count up the number of trips by grouping the variables we care about and taking the average. For instance, we can get the average HBO trip rate for households by size and vehicle count. Remember to weight! hbo_tripprod &lt;- tripprod %&gt;% group_by(hhsize, hhvehcnt) %&gt;% summarise( n = n(), # number of households in category HBO = weighted.mean(HBO, wthhfin), # average HBO trips per hh ) ## `summarise()` regrouping output by &#39;hhsize&#39; (override with `.groups` argument) hbo_tripprod ## Warning: `...` is not empty. ## ## We detected these problematic arguments: ## * `needs_dots` ## ## These dots only exist to allow future extensions and should be empty. ## Did you misspecify an argument? ## # A tibble: 16 x 4 ## # Groups: hhsize [4] ## hhsize hhvehcnt n HBO ## &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; ## 1 1 0 345 0.414 ## 2 1 1 2263 0.558 ## 3 1 2 541 0.540 ## 4 1 3 207 0.339 ## 5 2 0 55 0.420 ## 6 2 1 782 1.55 ## 7 2 2 2472 1.15 ## 8 2 3 1282 1.12 ## 9 3 0 25 3.98 ## 10 3 1 161 1.90 ## 11 3 2 422 2.04 ## 12 3 3 561 1.93 ## 13 4 0 12 3.32 ## 14 4 1 120 5.28 ## 15 4 2 556 4.31 ## 16 4 3 577 4.19 2.2 Trip Attraction 2.3 Homework Calculate the trip rates for each purpose by household size, and by income group. Do the rates make sense? Why or why not? Calculate the trip rates by the number of household workers and the vehicle availability. Do the rates make sense? Why or why not? Calculate the variance or standard deviation in work trip rates by household size / vehicles and by number of workers / vehicles. Which classification should be used for work trips? Calculate the number of households in each classification (size / vehicles), (workers / vehicles). What information does this give you about the estimated trip rates? Estimate trip rate attraction models for all the trip purposes. Present models with only significant or influential factors (try a few different specifications until you are satisfied with your models’ performance) Explain your attraction rate models; do the rates make sense? Which models have the best fit in terms of \\(R^2\\) value? Why? Remove the intercept from your model estimations. In R, you can do this by adding a -1 to the formula, as in lm(y ~ x - 1). Do the rates change? By how much? Should you keep the intercept in or remove it? 2.4 Lab In this lab you will implement and calibrate trip generation rates for the RVTPO model. 2.4.1 Trip Production The trip production rates are stored in the params/trip_prod/ folder, with a dbf file for each trip purpose in the model. We are going to calibrate the following trip purposes: HBW: cross-classification model of workers and vehicles available HBO: cross-classification model of household persons and vehicles available HBShop: cross-classification model of household persons and vehicles available The household travel survey for the RVTPO region reported the following total weighted trips in these trip purposes: Purpose Weighted Survey Trips HBW 118,653 HBO 267,987 HBShop 129,614 Begin by running the RVTPO model through the Trip Generation submodel. The trip productions for each trip purpose are recorded in Base/outputs/HH_PROD.dbf. Using this file, run a create a report that sums the trips produced in each of these three purposes. Compare the totals in the bare model with the weighted survey targets. Replace the bare model rates with rates you estimated from the PSRC travel survey during your homework assignment. Run your tabulation report again, and compare the total productions to the regional targets. Adjust the trip rates so that they replicate the regional survey targets within an acceptable margin of error. Ensure that the comparative relationship between the trip rates is maintained (i.e. households with more workers must make more work trips). 2.4.2 Trip Attraction The trip attraction rates enter into the destination choice model, but it is helpful to compare the total forecasted attractions using the rates you estimated. Apply the rates to the zonal socioeconomic data file and calculate the total number of attracted trips for each of the three purposes. Adjust the rates so that the total attractions for your three estimated purposes match the regional totals. 2.4.3 Report Prepare a technical report describing the process by which you estimated household trip production and attraction rates, and calibrated the trip rates to reproduce regional totals. Calculate the margin of error for all purposes (not just the purposes you calibrated). Discuss how well the calibrated trip generation models replicates the survey targets, and justify your residual error. Use formatted tables to display results instead of screenshots of output. You will be graded on the overall readability, flow, formatting and grammar in addition to how clearly you articulate the process of your work. "]
]
